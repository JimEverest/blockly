{
  "ev3.beepNote": "beep note [NOTE] for [TIME] secs",
  "ev3.buttonPressed": "button [PORT] pressed?",
  "ev3.getBrightness": "brightness",
  "ev3.getDistance": "distance",
  "ev3.getMotorPosition": "motor [PORT] position",
  "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
  "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
  "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
  "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
  "ev3.whenButtonPressed": "when button [PORT] pressed",
  "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
  "gdxfor.down": "down",
  "gdxfor.getAcceleration": "acceleration [DIRECTION]",
  "gdxfor.getForce": "force",
  "gdxfor.getSpin": "spin [DIRECTION]",
  "gdxfor.getTilt": "tilt [TILT]",
  "gdxfor.isFacing": "facing [FACING]?",
  "gdxfor.isFreeFalling": "falling?",
  "gdxfor.moved": "moved",
  "gdxfor.pulled": "pulled",
  "gdxfor.pushed": "pushed",
  "gdxfor.shaken": "shaken",
  "gdxfor.startedFalling": "started falling",
  "gdxfor.tiltDirectionMenu.back": "back",
  "gdxfor.tiltDirectionMenu.front": "front",
  "gdxfor.tiltDirectionMenu.left": "left",
  "gdxfor.tiltDirectionMenu.right": "right",
  "gdxfor.up": "up",
  "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
  "gdxfor.whenGesture": "when [GESTURE]",
  "makeymakey.downArrow": "down arrow",
  "makeymakey.downArrowShort": "down",
  "makeymakey.leftArrow": "left arrow",
  "makeymakey.leftArrowShort": "left",
  "makeymakey.rightArrow": "right arrow",
  "makeymakey.rightArrowShort": "right",
  "makeymakey.spaceKey": "space",
  "makeymakey.upArrow": "up arrow",
  "makeymakey.upArrowShort": "up",
  "makeymakey.whenKeyPressed": "when [KEY] key pressed",
  "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
  "microbit.buttonsMenu.any": "any",
  "microbit.clearDisplay": "clear display",
  "microbit.defaultTextToDisplay": "Hello!",
  "microbit.displaySymbol": "display [MATRIX]",
  "microbit.displayText": "display text [TEXT]",
  "microbit.gesturesMenu.jumped": "jumped",
  "microbit.gesturesMenu.moved": "moved",
  "microbit.gesturesMenu.shaken": "shaken",
  "microbit.isButtonPressed": "[BTN] button pressed?",
  "microbit.isTilted": "tilted [DIRECTION]?",
  "microbit.pinStateMenu.off": "off",
  "microbit.pinStateMenu.on": "on",
  "microbit.tiltAngle": "tilt angle [DIRECTION]",
  "microbit.tiltDirectionMenu.any": "any",
  "microbit.tiltDirectionMenu.back": "back",
  "microbit.tiltDirectionMenu.front": "front",
  "microbit.tiltDirectionMenu.left": "left",
  "microbit.tiltDirectionMenu.right": "right",
  "microbit.whenButtonPressed": "when [BTN] button pressed",
  "microbit.whenGesture": "when [GESTURE]",
  "microbit.whenPinConnected": "when pin [PIN] connected",
  "microbit.whenTilted": "when tilted [DIRECTION]",
  "music.categoryName": "Music",
  "music.changeTempo": "change tempo by [TEMPO]",
  "music.drumBass": "(2) Bass Drum",
  "music.drumBongo": "(13) Bongo",
  "music.drumCabasa": "(15) Cabasa",
  "music.drumClaves": "(9) Claves",
  "music.drumClosedHiHat": "(6) Closed Hi-Hat",
  "music.drumConga": "(14) Conga",
  "music.drumCowbell": "(11) Cowbell",
  "music.drumCrashCymbal": "(4) Crash Cymbal",
  "music.drumCuica": "(18) Cuica",
  "music.drumGuiro": "(16) Guiro",
  "music.drumHandClap": "(8) Hand Clap",
  "music.drumOpenHiHat": "(5) Open Hi-Hat",
  "music.drumSideStick": "(3) Side Stick",
  "music.drumSnare": "(1) Snare Drum",
  "music.drumTambourine": "(7) Tambourine",
  "music.drumTriangle": "(12) Triangle",
  "music.drumVibraslap": "(17) Vibraslap",
  "music.drumWoodBlock": "(10) Wood Block",
  "music.getTempo": "tempo",
  "music.instrumentBass": "(6) Bass",
  "music.instrumentBassoon": "(14) Bassoon",
  "music.instrumentCello": "(8) Cello",
  "music.instrumentChoir": "(15) Choir",
  "music.instrumentClarinet": "(10) Clarinet",
  "music.instrumentElectricGuitar": "(5) Electric Guitar",
  "music.instrumentElectricPiano": "(2) Electric Piano",
  "music.instrumentFlute": "(12) Flute",
  "music.instrumentGuitar": "(4) Guitar",
  "music.instrumentMarimba": "(19) Marimba",
  "music.instrumentMusicBox": "(17) Music Box",
  "music.instrumentOrgan": "(3) Organ",
  "music.instrumentPiano": "(1) Piano",
  "music.instrumentPizzicato": "(7) Pizzicato",
  "music.instrumentSaxophone": "(11) Saxophone",
  "music.instrumentSteelDrum": "(18) Steel Drum",
  "music.instrumentSynthLead": "(20) Synth Lead",
  "music.instrumentSynthPad": "(21) Synth Pad",
  "music.instrumentTrombone": "(9) Trombone",
  "music.instrumentVibraphone": "(16) Vibraphone",
  "music.instrumentWoodenFlute": "(13) Wooden Flute",
  "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
  "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
  "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats",
  "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats",
  "music.restForBeats": "rest for [BEATS] beats",
  "music.setInstrument": "set instrument to [INSTRUMENT]",
  "music.setTempo": "set tempo to [TEMPO]",
  "pen.categoryName": "Pen",
  "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
  "pen.changeHue": "change pen color by [HUE]",
  "pen.changeShade": "change pen shade by [SHADE]",
  "pen.changeSize": "change pen size by [SIZE]",
  "pen.clear": "erase all",
  "pen.colorMenu.brightness": "brightness",
  "pen.colorMenu.color": "color",
  "pen.colorMenu.saturation": "saturation",
  "pen.colorMenu.transparency": "transparency",
  "pen.penDown": "pen down",
  "pen.penUp": "pen up",
  "pen.setColor": "set pen color to [COLOR]",
  "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
  "pen.setHue": "set pen color to [HUE]",
  "pen.setShade": "set pen shade to [SHADE]",
  "pen.setSize": "set pen size to [SIZE]",
  "pen.stamp": "stamp",
  "speech.defaultWhenIHearValue": "let''s go",
  "speech.extensionName": "Speech to Text",
  "speech.listenAndWait": "listen and wait [time] s",
  "speech.speechReporter": "speech",
  "speech.whenIHear": "when I hear [PHRASE]",
  "text2speech.alto": "alto",
  "text2speech.defaultTextToSpeak": "hello",
  "text2speech.giant": "giant",
  "text2speech.kitten": "kitten",
  "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
  "text2speech.setVoiceBlock": "set voice to [VOICE]",
  "text2speech.speakAndWaitBlock": "speak [WORDS]",
  "text2speech.squeak": "squeak",
  "text2speech.tenor": "tenor",
  "translate.categoryName": "Translate",
  "translate.defaultTextToTranslate": "hello",
  "translate.translateBlock": "translate [WORDS] to [LANGUAGE]",
  "translate.viewerLanguage": "language",
  "videoSensing.categoryName": "Video Sensing",
  "videoSensing.direction": "direction",
  "videoSensing.motion": "motion",
  "videoSensing.off": "off",
  "videoSensing.on": "on",
  "videoSensing.onFlipped": "on flipped",
  "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
  "videoSensing.sprite": "sprite",
  "videoSensing.stage": "stage",
  "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
  "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
  "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
  "wedo2.getDistance": "distance",
  "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
  "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
  "wedo2.motorDirection.backward": "that way",
  "wedo2.motorDirection.forward": "this way",
  "wedo2.motorDirection.reverse": "reverse",
  "wedo2.motorId.a": "motor A",
  "wedo2.motorId.all": "all motors",
  "wedo2.motorId.b": "motor B",
  "wedo2.motorId.default": "motor",
  "wedo2.motorOff": "turn [MOTOR_ID] off",
  "wedo2.motorOn": "turn [MOTOR_ID] on",
  "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
  "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
  "wedo2.setLightHue": "set light color to [HUE]",
  "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
  "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
  "wedo2.tiltDirection.any": "any",
  "wedo2.tiltDirection.down": "down",
  "wedo2.tiltDirection.left": "left",
  "wedo2.tiltDirection.right": "right",
  "wedo2.tiltDirection.up": "up",
  "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
  "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
 
  "Device.No_Connect_Message": "Please Connect Device",
  "MAGICIAN_LITE_SET_PTP_COMMON_PARAMS": "%1 Set Motion Velocity Ratio %2 %",
  "MagicianLite.Extension.Home": "Home",
  "MagicianLite.Extension.SetEndFixture": "Select End Effector [BTN]",
  "MagicianLite.Extension.SetPTPCommonParams": "Set Motion Velocity Ratio [percent] %",
  "MagicianLite.Extension.SetJOGJointParams": "Set Joint Velocity [velocity] °/s  Acceleration [acceleration] °/s^2",
  "MagicianLite.Extension.SetPTPCoordinateParams_XYZR": "Set XYZ Velocity [Velocity] mm/s R Velocity [RVelocity] mm/s  XYZ Acceleration [Acceleration] mm/s^2 R Acceleration [RAcceleration] mm/s^2",
  "MagicianLite.Extension.SetPTPCoordinateParams": "Set End Effector Velocity [Velocity] °/s Acceleration [Acceleration] °/s^2",
  "MagicianLite.Extension.SetPTPJumpParams": "Set Jump Height [jumpHeight] mm zLimit [zLimit] mm",
  "MagicianLite.Extension.SetLostStepParams": "Set Lost Step Threshold [threshold] °",
  "MagicianLite.Extension.SetPTPCmd_Jump": "Jump To X [x] Y [y] Z [z] R [r]",
  "MagicianLite.Extension.SetPTPCmd_Goto": "Goto To X [x] Y [y] Z [z] R [r], Move Type [mode]",
  "MagicianLite.Extension.SetPTPCmd_Realative": "Relative Move ΔX [x] mm ΔY [y] mm ΔZ [z] mm ΔR [r]°",
  "MagicianLite.Extension.SetPTPCmd_Move_Joints": "Move Joints to Joint1 [Joint1]° Joint2 [Joint2]° Joint3 [Joint3]° Joint4 [Joint4]°",
  "MagicianLite.Extension.SetEndEffectorSuctionCup": "Suction Cup [status]",
  "MagicianLite.Extension.SetEndEffectorGripper": "Gripper [status]",
  "MagicianLite.Extension.SetIODO_digital": "Set 3.3V digital Output Port [port] level [level]",
  "MagicianLite.Extension.SetIOPWM": "Set PWM Output Port [port] Frequency [Frequency] Duty Cycle [DutyCycle] %",
  "MagicianLite.Extension.GetPose_Coordinate": "Get Current Coordinate [coordinate]",
  "MagicianLite.Extension.GetPose_Joint": "Get Current Joint Angle [joint]",
  "MagicianLite.Extension.GetIODI_Digital": "Get Digital Input Reading [eio]",
  "MagicianLite.Extension.GetIOADC_Analog": "Get Analog Input Reading [eio]",
  "MagicianLite.Extension.SetIOMultiplexing": "Set Pin [pin] Mode [mode]",
  "MagicianLite.Extension.SetR": "Set R [r] °",
  "MagicianLite.END_FIXTURE_MENU.Gripper & Suction Cup": "Gripper & Suction Cup",
  "MagicianLite.END_FIXTURE_MENU.Laser": "Laser",
  "MagicianLite.END_FIXTURE_MENU.Pen": "Pen",
  "MagicianLite.Extension.MOVE_TYPE_MENU.Line": "Line",
  "MagicianLite.Extension.MOVE_TYPE_MENU.Joint": "Joint",
  "MagicianLite.Extension.LEVEL_MENU.High": "High",
  "MagicianLite.Extension.LEVEL_MENU.Low": "Low",
  "MagicianLite.Extension.JOINT_MENU.Joint1": "Joint1",
  "MagicianLite.Extension.JOINT_MENU.Joint2": "Joint2",
  "MagicianLite.Extension.JOINT_MENU.Joint3": "Joint3",
  "MagicianLite.Extension.JOINT_MENU.Joint4": "Joint4",
  "MagicianLite.SUCTIONCUP_STATE_MENU.on": "on",
  "MagicianLite.SUCTIONCUP_STATE_MENU.off": "off",
  "MagicianLite.Extension.GRIPPER_STATE_MENU.Grip": "Grip",
  "MagicianLite.Extension.GRIPPER_STATE_MENU.Release": "RELEASE",
  "MagicianLite.Extension.GRIPPER_STATE_MENU.OFF": "OFF",
  "MagicianLite.Extension.ClearAllAlarmsState": "Clear All Alarms State",
  "MagicianLite.Extension.SetLostStep": "Set Lost Step",
  "Magician.Extension.VERSION_MENU.V1": "V1",
  "Magician.Extension.VERSION_MENU.V2": "V2",
  "Magician.Extension.COLOR_MENU.R": "Red",
  "Magician.Extension.COLOR_MENU.G": "Green",
  "Magician.Extension.COLOR_MENU.B": "Blue",
  "Magician.Extension.GetInfraredSensor": "Get [port] Infra-Red Sensor",
  "Magician.Extension.GetColorSensor": "Get [color] Color Sensor",
  "Magician.Extension.Home": "Home",
  "Magician.Extension.SetEndFixture": "Select End Effector [BTN]",
  "Magician.Extension.SetPTPCommonParams": "Set Motion Ratio  Velocity [velocity] % Acceleration [acceleration] %",
  "Magician.Extension.SetJOGJointParams": "Set Joint Velocity [velocity] °/s  Acceleration [acceleration] °/s^2",
  "Magician.Extension.SetPTPCoordinateParams_XYZR": "Set XYZ Velocity [Velocity] mm/s R Velocity [RVelocity] mm/s  XYZ Acceleration [Acceleration] mm/s^2 R Acceleration [RAcceleration] mm/s^2",
  "Magician.Extension.SetPTPCoordinateParams": "Set End Effector Velocity [Velocity] °/s Acceleration [Acceleration] °/s^2",
  "Magician.Extension.SetPTPJumpParams": "Set Jump Height [jumpHeight] mm",
  "Magician.Extension.SetLostStepParams": "Set Lost Step Threshold [threshold] °",
  "Magician.Extension.SetPTPCmd_Jump": "Jump To X [x] Y [y] Z [z] R [r]",
  "Magician.Extension.SetPTPCmd_Goto": "Goto To X [x] Y [y] Z [z] R [r], Move Type [mode]",
  "Magician.Extension.SetPTPCmd_Realative": "Relative Move ΔX [x] mm ΔY [y] mm ΔZ [z] mm ΔR [r]°",
  "Magician.Extension.SetLostStepCmd": "Check Lost Step",
  "Magician.Extension.SetPTPCmd_Move_Joints": "Move Joints to Joint1 [Joint1]° Joint2 [Joint2]° Joint3 [Joint3]° Joint4 [Joint4]°",
  "Magician.Extension.SetEndEffectorSuctionCup": "Suction Cup [status]",
  "Magician.Extension.SetEndEffectorGripper": "Gripper [status]",
  "Magician.Extension.SetIODO_digital": "Set 3.3V digital Output Port [port] level [level]",
  "Magician.Extension.SetIOPWM": "Set PWM Output Port [port] Frequency [Frequency] Duty Cycle [DutyCycle] %",
  "Magician.Extension.GetPose_Coordinate": "Get Current Coordinate [coordinate]",
  "Magician.Extension.GetPose_Joint": "Get Current Joint Angle [joint]",
  "Magician.Extension.GetIODI_Digital": "Get Digital Input Reading [eio]",
  "Magician.Extension.GetIOADC_Analog": "Get Analog Input Reading [eio]",
  "Magician.Extension.SetIOMultiplexing": "Set Pin [pin] Mode [mode]",
  "Magician.Extension.END_FIXTURE_MENU.Gripper & Suction Cup": "Gripper & Suction Cup",
  "Magician.Extension.END_FIXTURE_MENU.Laser": "Laser",
  "Magician.Extension.END_FIXTURE_MENU.Pen": "Pen",
  "Magician.Extension.MOVE_TYPE_MENU.Line": "Line",
  "Magician.Extension.MOVE_TYPE_MENU.Joint": "Joint",
  "Magician.Extension.LEVEL_MENU.High": "High",
  "Magician.Extension.LEVEL_MENU.Low": "Low",
  "Magician.Extension.JOINT_MENU.Joint1": "Joint1",
  "Magician.Extension.JOINT_MENU.Joint2": "Joint2",
  "Magician.Extension.JOINT_MENU.Joint3": "Joint3",
  "Magician.Extension.JOINT_MENU.Joint4": "Joint4",
  "Magician.Extension.SUCTIONCUP_STATE_MENU.on": "on",
  "Magician.Extension.SUCTIONCUP_STATE_MENU.off": "off",
  "Magician.Extension.GRIPPER_STATE_MENU.Grip": "Grip",
  "Magician.Extension.GRIPPER_STATE_MENU.Release": "RELEASE",
  "Magician.Extension.GRIPPER_STATE_MENU.OFF": "OFF",
  "Magician.Extension.ClearAllAlarmsState": "Clear All Alarms State",
  "Magician.Extension.SetLostStep": "Set Lost Step",
  "Magician.Extension.MODE_MENU.DUMMY": "IOFunctionDummy",
  "Magician.Extension.MODE_MENU.DO": "IOFunctionDO",
  "Magician.Extension.MODE_MENU.PWM": "IOFunctionPWM",
  "Magician.Extension.MODE_MENU.DI": "IOFunctionDI",
  "Magician.Extension.MODE_MENU.ADC": "IOFunctionADC ",
  "Magician.Extension.MODE_MENU.DIPU": "IOFunctionDIPU ",
  "Magician.Extension.MODE_MENU.DIPD": "IOFunctionDIPD ",
  "Magician.Extension.PTP_MODE_MENU.RELATIVE": "relative",
  "Magician.Extension.PTP_MODE_MENU.ABSOLUTE": "absolute",
  "Magician.Extension.VR_Tune_LIST.AffinityFemaleVoice" : "Affinity Female Voice",
  "Magician.Extension.VR_Tune_LIST.AffinityMaleVoice" : "Affinity Male Voice",
  "Magician.Extension.VR_Tune_LIST.MatureMaleVoice" : "Mature Male Voice",
  "Magician.Extension.VR_Tune_LIST.VibrantMaleVoice" : "Vibrant Male Voice",
  "Magician.Extension.VR_Tune_LIST.WarmFemaleVoice" : "Warm Male Voice",
  "Magician.Extension.VR_Tune_LIST.EmotionalFemaleVoice" : "Emotional Female Voice",
  "Magician.Extension.VR_Tune_LIST.EmotionalMaleVoice" : "Emotional Male Voice",
  "Magician.Extension.SR_TEXTTYPE_LIST_MENU.noun": "noun",
  "Magician.Extension.SR_TEXTTYPE_LIST_MENU.adjective": "adjective",
  "Magician.Extension.SR_TEXTTYPE_LIST_MENU.verb": "verb",
  "AIDataCollection.SAVE": "Take photo by %1 and save to Picture %2",
  "AIDataCollection.SAVELENGTH": "Number of Saved %1",
  "AIDataCollection.RECORD": "Record %1 seconds to voice %2",
  "AIDataCollection.PLAY": "Play %1",
  "AIDataCollection.CLEARIMAGE": "Clear Saved Picture %1",
  "AIDataCollection.CLEARRECORD": "Clear Saved Voice Record %1",
  "AIDataCollection.CLEARALL": "Clear All Saved Pictures and Voice Record",
  "AI.EXTENSION_NAME": "Facial Recognition",
  "AI.AI_LOCATION_MENU.HEIGHT": "Height",
  "AI.AI_LOCATION_MENU.WIDTH": "Width",
  "AI.AI_LOCATION_GENDER_MENU.MALE": "Male",
  "AI.AI_LOCATION_GENDER_MENU.FEMALE": "Female",
  "AI.AI_SetGroup": "Set Up Group [group] as ID [id]",
  "AI.AI_CreatePerson" : "Set Face in Picture [Image] to Name [PersonName], Gender [Gender] and add it to Group [GroupId] Number [PersonId]",
  "AI.AI_DetectFace" : "Detect Face in Picture [Image]",
  "AI.AI_DeletePerson" : "Delete Person PersonId[PersonId]",
  "AI.AI_GetGroupList" : "Get Group List",
  "AI.AI_GetPersonList": "Saved Tags Number in Group [group]",
  "AI.AI_Location_XY": "Detect Picture [img] Face Location[Location]",
  "AI.AI_Location_WH": "Detect Face [WH]",
  "AI.AI_DetectAge": "Age of face in picture [img]",
  "AI.AI_DetectGender": "Gender of face in picture [img] id [gender]",
  "AI.AI_DetectExpression": "Detect Expression",
  "AI.AI_CompareFace": "Face in Picture [img1] and Picture [img2] are same Person",
  "AI.AI_SearchFaces_Bool": "Detect Group [group] in Picture [img]",
  "AI.AI_Confidence": "Confidence of recognizing [img1] in [img2]",
  "AI.AI_Confidence_Group" : "Confidence of Group [group] member in Picture [img]",
  "AI.AI_DeletePersonFromGroup" : "Remove [personId] in Group [groupId]",
  "AI.AI_DeleteGroup" : "Delete Group [groupId]",
  "AI.AI_SearchFaces_Reporter" : "Detect People [img] in [group]",
  "OCR.OCR_GeneralAccurateOCR": "Detect Text Content in [image]",
  "VR.VR_SentenceRecognition": "Detect Chinese Content in [voice]",
  "VR.VR_TextToVoice": "Use [TuneType] Tune to Say [Text]",
  "SR.EXTENSION_NAME": "Semantic Recognition",
  "SR.SR_LexicalAnalysis": "Extract [Text] in [TextType]",
  "SR.SR_SimilarWords": "[Text] is a Synonym of [Text2]",
  "SR.SR_DetectIn": "Detect [src] in [dis]",
  "TextRecognition.EXTENSION_NAME": "Text Recognition"
}
